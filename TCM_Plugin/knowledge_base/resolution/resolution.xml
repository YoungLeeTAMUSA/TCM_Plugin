<?xml version="1.0" encoding="UTF-8"?>
<resolutions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:noNamespaceSchemaLocation="resolution_schema.xsd">
	<resolution type="20">
		<label><![CDATA[Ignore this warning]]></label>
		<description>
    <![CDATA[
Our heuristics detected that <b>%s</b> might be vulnerable.<br/>
It has the full path: <b>%s</b><br/><br/>
If you think it is a false positive you can ignore it and this warning will no longer appear.]]>
		</description>
	</resolution>
	<resolution type="30">
		<label><![CDATA[Sanitize this element]]></label>
		<description><![CDATA[This element should be sanitized to avoid Cross-Site Scripting(XSS).<br/><br/>
    Sample of a vulnerable code:<br/>
    String parameter = <b>%s</b>;<br/>
    response.getWriter().print(parameter);<br/><br/>
    
    Possible Solution:<br/>
    import org.owasp.encoder.Encode;<br/>
    ...<br/>
    String parameter = <b>Encode.forHtmlAttribute(%s)</b>;<br/>
    response.getWriter().print(parameter);    
    ]]></description>
	</resolution>
	<resolution type="40">
		<label><![CDATA[Remove hard-coded content]]></label>
		<description><![CDATA[You should retrieve this content from a safe place and remove it from the source code.]]></description>
	</resolution>
	<resolution type="50">
		<label><![CDATA[Remove String Concatenation]]></label>
		<description>
		  <![CDATA[When you use String Concatenation to create your queries you give
		  an opportunity to an attacker to exploit a vulnerability in your application. <br/>
      ...<br/>  
		  String userName = request.getParameter("userName");<br/>
      String sql = "SELECT * FROM USER WHERE USERNAME = " + <b>userName</b>;<br/>
      ResultSet resultSet = statement.executeQuery(sql);<br/>
      ...<br/>      
      You should change your code to make it more like the code below: <br/>
      ...<br/>  
      String userName = request.getParameter("userName");<br/>
      String sql = "SELECT * FROM USER WHERE USERNAME = <b>?</b>";<br/>      
      PreparedStatement preparedStatement = conn.prepareStatement(sql);<br/>
      preparedStatement.setString(1, userName);<br/>
      ResultSet resultSet = statement.executeQuery();<br/>
      ...
		  ]]>
		</description>
	</resolution>
</resolutions>