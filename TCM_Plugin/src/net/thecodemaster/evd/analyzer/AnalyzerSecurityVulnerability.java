package net.thecodemaster.evd.analyzer;

import net.thecodemaster.evd.verifier.VerifierCommandInjection;
import net.thecodemaster.evd.verifier.VerifierCookiePoisoning;
import net.thecodemaster.evd.verifier.VerifierCrossSiteScripting;
import net.thecodemaster.evd.verifier.VerifierPathTraversal;
import net.thecodemaster.evd.verifier.VerifierSQLInjection;
import net.thecodemaster.evd.verifier.VerifierSecurityMisconfiguration;
import net.thecodemaster.evd.verifier.VerifierUnvalidatedRedirecting;

/**
 * @author Luciano Sampaio
 */
public class AnalyzerSecurityVulnerability extends Analyzer {

	public AnalyzerSecurityVulnerability(boolean commandInjection, boolean cookiePoisoning, boolean crossSiteScripting,
			boolean pathTraversal, boolean securityMisconfiguration, boolean sqlInjection, boolean unvalidatedRedirecting) {
		super();

		if (commandInjection) {
			getVerifiers().add(new VerifierCommandInjection());
		}
		if (cookiePoisoning) {
			getVerifiers().add(new VerifierCookiePoisoning());
		}
		if (crossSiteScripting) {
			getVerifiers().add(new VerifierCrossSiteScripting());
		}
		if (pathTraversal) {
			getVerifiers().add(new VerifierPathTraversal());
		}
		if (securityMisconfiguration) {
			getVerifiers().add(new VerifierSecurityMisconfiguration());
		}
		if (sqlInjection) {
			getVerifiers().add(new VerifierSQLInjection());
		}
		if (unvalidatedRedirecting) {
			getVerifiers().add(new VerifierUnvalidatedRedirecting());
		}
	}

}
