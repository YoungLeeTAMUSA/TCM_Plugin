01 + Create the preferences page.
02 + Make the plug-in and its messages MultiLingual.
03 + Create the pop-up menu when the user click on a project.
03.1 + Open the settings preference page from the pop-up menu.
03.2 + Add or Remove the project to the list of monitored projects.
03.3 + Make the buttons add and remove only available if the project is or is not already being monitored.
04 + Make the plug-in start automatically with Eclipse.
05 + Create the exception handling mechanism.
06 + Track changes on java files.
06.1 + Perform detection only in projects selected by the developer.
06.1 ** I am having problems because the BUILDER is only being invokes when the user saves the file and not automatically.
06.2 + Run the detection on a different thread.
06.3 + Inform the user which files are being processed.
07 + Create the markers for the plug-in.

08 - Create the heuristics.
08.1 - Security Misconfiguration.
08.1.1 + DriverManager.getConnection.
08.1.2 - FTP.
08.1.3 - Email.

09 - Implement the verifiers.
09.1 - SecurityMisconfigurationVerifier.
09.2 - CookiePoisoningVerifier.
09.3 - SQLInjectionVerifier.
09.4 - XSSVerifier.

10 - Create our own view.

XX - Check for cases where the class A invokes method C from class B, but the developer is working on class A so the class B will 
not be verified, but it can be a case where the vulnerability happens when something is introduced in class A.